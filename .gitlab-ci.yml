# See docs/examples
# http://doc.gitlab.com/ce/ci/quick_start/README.html
# http://doc.gitlab.com/ce/ci/yaml/README.html

# GitLab CI template for Go tests. Note this installs
# a new working copy of Go in a non-standard path such
# that sudo/root is not needed for the install stage.

# note that this particular install-environment stage
# is overly verbose in order to debug anything tricky
# or weird in your environment - feel free to trim it 
# down as needed

stages:
 # - install-environment
  - build
  - baseline


build-maya:
   variables: 
      GOARCH: 'amd64'
      GO_FOR_RELEASE: '1.9.1'
   stage: build
   before_script:
    - apt-get update
    - apt-get install sudo
    - apt-get -qq -y install curl
    - apt-get install --reinstall make
    - export CURRENT_BUILD_PATH=$(pwd)
    - echo $PATH
    - rm -rf $HOME/golang
    - rm -rf $HOME/gopath
    - mkdir -p $HOME/golang # for GOROOT (contains the Go binary & core packages)
    - mkdir -p $HOME/gopath # for GOPATH (contains code and external packages)
    - curl http://storage.googleapis.com/golang/go1.9.1.linux-amd64.tar.gz > go1.9.1.linux-amd64.tar.gz
    - tar -C $HOME/golang -xzf go1.9.1.linux-amd64.tar.gz
    - export GOROOT=$HOME/golang/go
    - export GOPATH=$HOME/gopath
    - export PATH=$PATH:$GOROOT/bin
    - export PATH=$PATH:$GOPATH/bin
    - (if [[ "$(go version)" == *"go version go1.9"* ]]; then echo "âœ“ Go binary installed!"; else echo "Go binary not installed"; exit -1; fi);
    - go version
    - echo $PATH
    - go env
    - which go
    - curl -fsSL https://download.docker.com/linux/ubuntu/gpg |  apt-key add -
    - add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
    - apt-get update
    - apt-cache policy docker-ce
    - apt-get install -y docker-ce
    - usermod -aG docker ${USER}
   script: 
    - echo "success"

baseline-image:
  stage: baseline
  script:
    - "curl -X POST -F token=a70ff62f6fb0f8013c687087ae5565 -F ref=test https://gitlab.com/api/v4/projects/7642571/trigger/pipeline"
#build-maya:
#  stage: build
#  script:
#    - cd $CURRENT_BUILD_PATH
#    - go build

#test-my-project:
#  stage: test
#  script:
#    - cd $CURRENT_BUILD_PATH
#    - go test

